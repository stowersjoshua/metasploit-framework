##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = AverageRanking

  include Msf::Exploit::Remote::HTTP::Wordpress

  def initialize(info = {})
    super(update_info(
      info,
      'Name' => 'WordPress Core Restore Post Vulnerability',
      'Description' => %q{
        SQL injection vulnerability in the wp_untrash_post_comments function in wp-includes/post.php in
        WordPress before 4.2.4 allows remote attackers to execute arbitrary SQL commands via a comment that is
        mishandled after retrieval from the trash.
      },
      'Author' => [
        'Netanel Rubin', # initial discovery
        'Joshua Stowers' # metasploit module
      ],
      'License' => MSF_LICENSE,
      'References' => [
        %w(URL http://blog.checkpoint.com/2015/08/11/finding-vulnerabilities-in-core-wordpress-a-bug-hunters-trilogy-part-ii-supremacy),
        %w(CVE, 2015-2213)
      ],
      'Privileged'     => false,
      'Platform'       => 'php',
      'Arch'           => ARCH_PHP,
      'Targets'        => [['WordPress < 4.2.4', {}]],
      'DefaultTarget'  => 0,
      'DisclosureDate' => 'Mar 5 2015'))
  end

  def check
    response = wordpress_and_online?

    unless response and response.body
      vprint_error("#{peer} does not seem to be WordPress site")
      return Exploit::CheckCode::Unknown
    end

    version = response.body.match(/WordPress\s(\d{1,3})\.(\d{1,3})\.(\d{1,3})/).captures.join('.')

    if version < '4.2.4'
      return Exploit::CheckCode::Appears
    else
      return Exploit::CheckCode::Unknown
    end
  end

  def exploit

  end
end
